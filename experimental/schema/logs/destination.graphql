#Destination fields capture details about the receiver of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.
#
#Destination fields are usually populated in conjunction with source fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.
type Destination implements BaseRecord {
    #    Destination network address
    address:String
    #    Bytes sent from the destination to the source.
    bytes:Long
    #The domain name of the destination system.
    domain:String
    #The ip address of the destination system.
    ip:IP
    #The mac address  of the destination system.
    mac:String
    #    Translated IP of source based NAT sessions (e.g. internal client to internet)
    natIpp:IP
    # port of the client
    port:Long
    #    Translated port of source based NAT sessions
    natPort:Long
    #    Packets sent from the destination to the source.
    packets:Long
    #    The highest registered client domain, stripped of the subdomain.
    registeredDomain:String
    #    The subdomain portion of a fully qualified domain name includes
    #        all of the names except the host name under the registered_domain
    subdomain:String
    #    he effective top level domain (eTLD), also known as the domain
    #        suffix, is the last part of the domain name.
    topLevelDomain:String

    #Fields describing an Autonomous System (Internet routing prefix).
    as:AutonomousSystem
    #    Fields describing a location.
    geo:Geo
    #Fields to describe the user relevant to the event.
    user:User
}